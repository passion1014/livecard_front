spring:
#  cache:
#    type: simple
#    cache-names: farmInfo, permissionsCache, readableGroupCache, gradeMenuCache
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    defer-datasource-initialization: true
  datasource:
    url: jdbc:mysql://localhost:3306/livecard
    username: livecard_user
    password: livecard_user
  sql:
    init:
      data-locations: classpath:data.sql
      mode: always
  thymeleaf:
    cache: false
    mode: HTML5
    encoding: UTF-8
    prefix: classpath:/templates/
    suffix: .html
    template-resolver-order: 1
  jackson:
    serialization:
      fail-on-empty-beans: false
  devtools:
    restart:
      enabled: false
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 20MB
  # TODO: client-secret도 Jasypt로 암호화?
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원 정보를 json으로 받는데 response라는 키값으로 네
        registration:
          kakao:
            client-id: 067fc1214d98bfce4fb253f0526b866a
            client-secret: zBKRRTiyb3CFHYjDJ7flBeKE6cDnvbGa
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:3000/loginCallback?provider=kakao"
            scope: email,profile
          naver:
            client-id: 9ptmkmJuk85BeO1Qjlj4
            client-secret: 08I1VhePzc
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:3000/loginCallback?provider=naver"
            scope: email,profile
          google:
            client-id: 435968168172-5gq1u0vb3e36bu4rgusrk6beltjf6r7l.apps.googleusercontent.com
            client-secret: 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
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:3000/loginCallback?provider=google"
            scope: email,profile

jwt:
  issuer: issuer@gmail.com
  secret-key: 462D4A614E645266556A586E3212357538782F313F4428472B4B625065536856
  expiration: 60000 # 86400000 # 1 day
  refresh-token:
    expiration: 604800000 # 7 days
cloud:
  aws:
    s3:
      bucket: livecard-s3-file
    region:
      static: ap-northeast-2
    credentials:
      access-key: 111 #ENC(m5xE7+xaNvuBgY87OHXr+692MV6+wwY6C34X+GzEsbjDWw4Xylcf3zEhQjp6UsZMUyPyaeE4+fmstGBsaMHnxQ==)
      secret-key: 111 #ENC(4EqdHyXqbvqskc5FYq31RTquoa+vgV08ZM9Pm1fweV+sQvHU1UE5nML0kMiCpWVbIkuD7sEejNOgmWNsB745pbrmvd5RCrVBI3TRByprhos=)
    stack:
      auto: false


logging:
  level:
    sql: debug
    org.hibernate.orm.jdbc.bind: trace
    org.springframework.cache: debug
    org.springframework.security: error

jasypt:
  encryptor:
    bean: jasyptEncryptor
    key: abc12345 #${JASYPT_ENCRYPTOR_PASSWORD}



